Contact Manager

Tools used
--------->
react, redux, react-router-dom

Visual components
---------------->
1. Header based on AppBar and Toolbar 
	Nothing special here just make sure that any component coming just below this header should have enough
	margin so that it is not overlapped by Header
2. Card based component to display contact details on homepage
	create a simple card use {display: 'flex'} to put avatar and card content in one row
	and buttons are used inside card action component
3. Grid to accomodate card and display 4 in one row
	simple use sm={3} to display 4 cards in a row on small or up devices/pixels
	simply use an array with data and use map function to go over all use the info in array 
	to change the card content
4. a floating button to create new contact
	make the button fixed display use bottom and right property to fix the position
5. a form for adding the information
	Text field is made full length of page using inside a grid component with sm={12} and off course its becomes block element
6. SVG based images to be used for avatars
	created an object with all svgs labeled key from svg-1 to svg-16 or default
7. A dialog to choose different avatar
	since all avatar are labeled with svg-1 to svg-16 changing 1 to 16 you can get all svgs
	note: used svgs/buttons inside card content so that at scrolling time card label and card actions are 
	always getting displayed
	dialog content is always starting from left used flex property justifyContent to center them
	
Src folder structure
------------------->
routes => to create all react-router-dom based routes here
utils => small basic components to be used to make other components
action => action creators and constants are stored
components => all visual/presentational components
containers => all components to store redux based props and dispatch
reducer => redux based reducer function


others
----->
icons like buttons used can be made small or big using fontSize
since svgs are like texts in html and will take size of parent element fontSize assigned
width and height can be used to actually change parent icon size(used in card element for IconButton)

all colors are stored in material ui under material-ui/colors
theme.spacing.unit = 8px, it is used to create size or length in material-ui
theme.pallete.color = for changing color from material ui	//TODO: to be checked