npm i -S react-router-dom	//install
react-router-dom is used for webpage routing
this package is used for the navigation in react for single page applications
import {BrowserRouter as Router, Route, Link} from 'react-router-dom'	//these 3 is used generally

root component is to be wrapped in BrowserRouter for routing to work
import {BrowserRouter} from 'react-router-dom'
import {BrowserRouter as Router} from 'react-router-dom'		//to use name Router

<Route path="/" render={()=>(<h1>Hello World</h1>)}></Route>
<Route path="/" component={App}></Route>
<Route exact path="/" component={App}></Route>		//exact boolean prop for path to match exactly
Warning: <Route component> takes precendence over <Route render> so donâ€™t use both in the same <Route>

<Link to="/">Home</Link>		//make navigational link
to = {'/posts/' + id}		//can also be used for dynamic route creation using id variable
<Link to={{						//to as an object
  pathname: '/courses',
  search: '?sort=name',
  hash: '#the-hash',
  state: { fromDashboard: true }
}}/>

props setup by react-router-dom check for this.props
history
location
match	etc				//try componentDidMount(){ console.log(this.props) }

this.props (history,location,match etc will not be passed to children) explicitly
how to get them ?
1. use of withRouter ?
2. spread the props in children component ...{this.props}
e.g. <Comp ...{this.props}/>

create relative path in react-router-dom

NavLink to get current active route and put some styling
activeClassName		//override the default active class added 
activeStyle			//add style object if it is active

Dynamic route <Link to="/:id">HomeId</Link>	//it means it will be activated if anything is there after /
but it will affect any /normal routes so put them before /:id
e.g.
<Link to="/">Home</Link>
<Link to="/normal">normal</Link>		//parsing happens top to bottom
<Link to="/:id">HomeId</Link>

Switch component in react-router-dom    // load only one of the route at a time the first one matching criteria

Navigate programitacally
using history prop

nested Route, Route inside Route

Redirect and conditional Redirect
history prop to redirect and replace





